// Template.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//генератор случайных чисел

#include <iostream>
#include <cstdlib> // подлючение библиотеки, содержащей в себе множество 
//стандартных функций языка C. 
// Например, rand и srand.
#include <ctime>//подключение библиотеки из языка С, 
//содержащей в себе функции для работы со временем. 
// Например, функции time.

int main()
{
	setlocale(LC_ALL,"ru");
	int n;

	/* ГЕНЕРАЦИЯ СЛУЧАЙНОГО ЧИСЛА
	srand(time(NULL));//srand устанавливает зерно генерации случайных 
	//чисел, а time возвращает количество секунд прошедших с 1 января 1970 года

	std::cout << rand ()<< '\n';//rand генерирует случайное число от 0 до 32767
	std::cout << rand() << '\n';
	*/

	//Случайные числа из заданных диапазонов

	srand(time(NULL));
	// Случайное число от 0 до Х Не включительно

	const int X = 10;
	std::cout << rand() % X << '\n';// rand() % X делим по модулю на Х , число будет всегда входить в диапазон до Х

	// Случайное число от 0 до Х включительно
	 std::cout << rand() % (X+1) << '\n';
	// while (true)//бесконечный цикл



		 const int A = 10, B = 15;
	 //Случайное число от А до В не включительно [A..B)
	 std::cout << rand() % (B - A) + A << '\n';



	 //Случайное число от А до В включительно [A..B)
	 std::cout << rand() % (B + 1 - A) + A << '\n';




	 //ЗАПОЛНЕНИЕ МАССИВА СЛУЧАЙНМИ ЧИСЛАМИ
	 std::cout << "Массив:\n";
	 const int size = 20;
	 int arr[size];
	 const int beg = 30, end = 60;
	 srand(time(NULL));//генератор случайных чисел ПЕРЕД циклом
	 for (int i = 0; i < size; i++) {
		 arr[i] = rand() % (end - beg) + beg;
		 std::cout << arr[i] << ' ';

	 }

	 std::cout << '\n';// В конце всегда пустая строка


	return 0;

}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
